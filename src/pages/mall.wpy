<template>
  <view class="top_search">
    <view class="search_read_only">
      <navigator class="search_content" url="/pages/adding">
        <i class="iconfont icon-search"></i>
        <view class="search_input">搜索商品</view>
      </navigator>
    </view>
  </view>
  <view class="classify"  bindtouchstart='touchStart' bindtouchend="touchEnd" style="height:{{windowHeight-50}}px">
    <scroll-view class="classify_catetory" scroll-y scroll-with-animation="true" style="height:{{windowHeight-50}}px">
      <view class="name {{currentTab==index ? 'active' : ''}}" wx:for="{{rootcateList}}" wx:key="key" wx:for-item='item' wx:for-index="index" data-current="{{index}}" bindtap="swichNav">
        {{item.name}}
      </view>
    </scroll-view>
    <scroll-view class="classify_detail" scroll-y scroll-with-animation="true" style="height:{{windowHeight-50}}px">
      <view class="adding">
        <view>功能正在完善</view>
        <view>感谢关注与支持</view>
        <view>敬请期待</view>
        <view class="futrue">恋爱联盟良心出品</view>
      </view>
    </scroll-view>
  </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/api';
import adding from '@/pages/adding';
import {
  SYSTEM_INFO,
  SEL_CLASS_CODE
} from '@/utils/constant';
import tip from '@/utils/tip'
export default class mall extends wepy.page {
  config = {
    navigationBarTitleText: '商城',
  }
  data = {
    startX:0,
    startY:0,
    endX:0,
    endY:0,
    scrollTop: 100,
    windowHeight: 0,
    list: {},
    currentTab:0,
    rootcateList: [{'name':'型男必备'},{'name':'女神专属'},{'name':'佳节礼品'},{'name':'精选商品'}],
  }
  changeTab() {
    if (this.endX - this.startX > 30 && Math.abs(this.endY - this.startY)*1.5 < Math.abs(this.endX - this.startX)) {
      wx.switchTab({
        url: "./course"
      })
    } else if (this.endX - this.startX < -30 && Math.abs(this.endY - this.startY)*1.5 < Math.abs(this.endX - this.startX)) {
      wx.switchTab({
        url: "./info"
      })
    }
  }
  onShareAppMessage() {
    return {
      title: '恋爱联盟',
      path: '/pages/home',
    };
  }
  onLoad() {
    let that = this;
    let systemInfo = wepy.getSystemInfoSync();
    this.windowHeight = systemInfo.windowHeight;
    this.$apply();
  }
  methods = {
    touchStart(e){
      this.startX=e.changedTouches[0].clientX;
      this.startY=e.changedTouches[0].clientY;
    },
    touchEnd(e){
      this.endX=e.changedTouches[0].clientX;
      this.endY=e.changedTouches[0].clientY;
      this.changeTab();
    },
    swichNav(e) {
      if (this.currentTab == e.target.dataset.current) {
        return false;
      } else {
        this.currentTab = e.target.dataset.current;
        this.$apply();
      }
    },
  }
}
</script>
<style lang="less">
.search_read_only .search_content {
  width: 100%;
}
.classify {
  display: flex;
  position: relative;
  .classify_catetory {
    width: 200rpx;
    position: relative;
    z-index: 1;
    .name {
      text-align: center;
      height: 100rpx;
      line-height: 100rpx;
      font-size: 28rpx;
      color: #666;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }
    .active {
      border-left: 6rpx solid #ff6a3c;
      background: #fff;
      color: #ff6a3c;
    }
  }
  .classify_detail {
    position: relative;
    z-index: 999;
    // margin-left: -15rpx;
    background: #fff;
    padding: 15px 10px 10px 30px;
    .classify_item {}
    .title {
      font-size: 30rpx;
      color: #333;
      margin-left: 25rpx;
    }
    .children {
      display: flex;
      flex-wrap: wrap;
      margin: 20rpx 0rpx;
    }
    .child_image {
      width: 60px;
      height: 60px;
    }
    .child_name {
      font-size: 26rpx;
      color: #666;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 170rpx;
    }
    .children_item {
      height: 200rpx;
      width: 170rpx;
      text-align: center;
    }
  }
  .adding{
    margin-top:300rpx; 
    text-align: center;
    font-size: 30rpx;
    color: #000000;
  }
  .futrue{
    margin-top:300rpx; 
  }
}
</style>

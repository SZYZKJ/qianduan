<template>
  <view class="searchpage">
    <view class="search">
      <view class="searchkuang">
        <view class="serch_content">
          <view class="searchicon">
            <icon type="search" size="24"></icon>
          </view>
          <input type="text" class="search_input" value="{{inputValue}}" focus="{{focus}}" bindinput="bindinput" bindconfirm="bindconfirm('')" bindfocus="bindfocus" confirm-type="search" placeholder="复制妹子聊天的话" maxlength="20" />
          <view class="clearicon" wx:if="{{inputValue!=''}}" bindtap="delText">
            <icon type="clear" size="24"></icon>
          </view>
        </view>
        <view class="searchanniu" bindtap="bindconfirm('')">搜索</view>
      </view>
      <view wx:if="{{showRecommend==0}}">
        <tab class="tab" @currentTab.user="getCurrentTab" :currentTab.sync="currentTab" :tabList.sync="tabList"></tab>
      </view>
    </view>
    <view class="showdata" wx:if="{{showRecommend==0}}" bindtouchstart="touchStart" bindtouchend="touchEnd">
      <view wx:if="{{currentTab==0}}">
        <placeholder wx:if="{{huashuList.length==0&&isend0}}"></placeholder>
        <huashu :huashuList.sync="huashuList" @jilu.user="jilu"></huashu>
      </view>
      <view wx:if="{{currentTab==1}}">
        <placeholder wx:if="{{biaoqingList.length==0&&isend1}}"></placeholder>
        <biaoqing :biaoqingList.sync="biaoqingList" @jilu.user="jilu" @nochange.user="nochange"></biaoqing>
      </view>
      <view wx:if="{{currentTab==2}}">
        <placeholder wx:if="{{baikeList.length==0&&isend2}}"></placeholder>
        <baike :baikeList.sync="baikeList"></baike>
      </view>
      <view class="textend" wx:if="{{(currentTab==0&&!isend0&&oldhuashu)||(currentTab==1&&!isend1&&oldbiaoqing)||(currentTab==2&&!isend2&&oldbaike)}}">加载中......</view>
      <view class="textend" wx:else>恋爱脱单上恋爱联盟</view>
    </view>
    <view class="recommend" wx:else>
      <view wx:if="{{showhlepkeyword}}">
        <view class="helpkeywords" wx:for="{{helpKeywords}}" wx:key="key" wx:for-item="item" wx:for-index="index">
          <view class="keyword" bindtap="bindconfirm({{item}})">
            {{item}}
          </view>
        </view>
      </view>
      <view wx:else>
        <view class="rementuijian">
          <view class="kuai">
            <view class="biaoti">热门推荐</view>
            <button class="weui-btn" type="default" size="mini" wx:for="{{hotWordsList}}" wx:key="item" bindtap="searchKeyword({{item}})">{{item}}</button>
          </view>
        </view>
        <view class="lishijilu">
          <view class="kuai">
            <view class="biaoti">历史记录</view>
            <button class="weui-btn" type="default" size="mini" wx:for="{{hisWordsList}}" wx:key="item" bindtap="searchKeyword({{item}})">{{item}}</button>
          </view>
          <view class="if_his" wx:if="{{hisWordsList.length==0}}">暂无搜索记录</view>
          <button class="btn_box" bindtap="clearHis">清除历史记录</button>
          <view class="minkuai"></view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from "wepy";
  import api from "@/api/api";
  import tip from "@/utils/tip";
  import tab from "@/components/tab";
  import huashu from "@/components/huashu";
  import biaoqing from "@/components/biaoqing";
  import baike from "@/components/baike";
  import placeholder from "@/components/placeholder";
  export default class searchpage extends wepy.page {
    config = {
      navigationBarTitleText: "搜索",
      enablePullDownRefresh: true,
    };
    components = {
      tab: tab,
      huashu: huashu,
      biaoqing: biaoqing,
      baike: baike,
      placeholder: placeholder
    };
    data = {
      startX: 0,
      startY: 0,
      endX: 0,
      endY: 0,
      focus: false,
      ifonShow: true,
      inputValue: "",
      oldhuashu: "",
      oldbiaoqing: "",
      oldbaike: "",
      currentTab: 0,
      huashuList: [],
      biaoqingList: [],
      baikeList: [],
      isend0: false,
      isend1: false,
      isend2: false,
      scroll0: "",
      scroll1: "",
      scroll2: "",
      tabList: ["话术", "表情", '百科'],
      hisWordsList: [],
      hotWordsList: [],
      helpKeywords: [],
      showRecommend: 0,
      showhlepkeyword: 0,
      jilutype: "huashu",
      jilucontent: "",
      copyinput: "",
      weixinshenhe: wepy.getStorageSync('weixinshenhe'),
    };
    async getHelpkeywords() {
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.getHelpkeywords({
        query: this.inputValue,
        unionid: unionid,
        nowtab: this.currentTab,
      });
      this.helpKeywords = json.data;
      this.showhlepkeyword = true;
      this.showRecommend = true;
      this.$apply();
    }
    async getRecommend() {
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.getRecommend({
        unionid: unionid
      });
      this.hotWordsList = json.data.hotWordsList;
      this.$apply();
    }
    async getHiswordList() {
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.getHiswordList({
        unionid: unionid
      });
      this.hisWordsList = json.data;
      this.$apply();
    }
    computed = {};
    confirm() {
      if (this.weixinshenhe == 1) {
        wx.showModal({
          title: "开通会员",
          content: "您当前为非会员，点击开通，解锁更多会员专属服务，为您提供更多恋爱能力~",
          showCancel: true,
          cancelText: "取消",
          confirmText: "开通",
          success: function(res) {
            if (res.cancel) {} else {
              wepy.navigateTo({
                url: "/pages/vip"
              });
            }
          },
          fail: function(res) {}, //接口调用失败的回调函数
          complete: function(res) {} //接口调用结束的回调函数（调用成功、失败都会执行）
        });
      } else {
        wx.showModal({
          title: "温馨提示",
          content: "您当前为非会员，无法为您提供更多恋爱能力~",
          showCancel: false,
          confirmText: "确定",
          success: function(res) {
            if (res.cancel) {} else {}
          },
          fail: function(res) {}, //接口调用失败的回调函数
          complete: function(res) {} //接口调用结束的回调函数（调用成功、失败都会执行）
        });
      }
    }
    async searchLiaomeihuashu() {
      let that = this;
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.searchLiaomeihuashu({
        query: that.inputValue,
        unionid: unionid,
        scroll: that.scroll0
      });
      that.oldhuashu = that.inputValue;
      if (json.MSG == "OK") {
        that.huashuList = that.huashuList.concat(json.data);
        if (json.data.length < 10) this.isend0 = true;
        that.scroll0 = json.scroll;
      } else {
        this.confirm();
      }
      that.showRecommend = false;
      that.$apply();
    }
    async searchBiaoqing() {
      let that = this;
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.searchBiaoqing({
        query: that.inputValue,
        unionid: unionid,
        scroll: that.scroll1
      });
      that.oldbiaoqing = that.inputValue;
      if (json.MSG == "OK") {
        that.biaoqingList = that.biaoqingList.concat(json.data);
        if (json.data.length < 10) this.isend1 = true;
        that.scroll1 = json.scroll;
      } else {
        this.confirm();
      }
      that.showRecommend = false;
      that.$apply();
    }
    async searchBaike() {
      let that = this;
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.searchBaike({
        query: that.inputValue,
        unionid: unionid,
        scroll: that.scroll2
      });
      that.oldbaike = that.inputValue;
      if (json.MSG == "OK") {
        that.baikeList = that.baikeList.concat(json.data);
        if (json.data.length < 10) this.isend2 = true;
        that.scroll2 = json.scroll;
      } else {
        this.confirm();
      }
      that.showRecommend = false;
      that.$apply();
    }
    async clearHiswords() {
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.clearHiswords({
        unionid: unionid
      });
      this.hisWordsList = [];
      this.$apply();
    }
    doSearch(val) {
      if (val.length) {
        this.inputValue = val;
        if (this.currentTab == 0) this.searchLiaomeihuashu();
        if (this.currentTab == 1) this.searchBiaoqing();
        if (this.currentTab == 2) this.searchBaike();
        this.$apply();
      }
    }
    changeTab() {
      if (
        this.endX - this.startX > 30 &&
        Math.abs(this.endY - this.startY) * 1.5 <
        Math.abs(this.endX - this.startX)
      ) {
        if (this.currentTab > 0) {
          this.currentTab--;
          if (this.currentTab == 0 && this.inputValue != this.oldhuashu) {
            this.huashuList = [];
            this.scroll0 = "";
            this.isend0 = false;
            this.searchLiaomeihuashu();
          }
          if (this.currentTab == 1 && this.inputValue != this.oldbiaoqing) {
            this.biaoqingList = [];
            this.scroll1 = "";
            this.isend1 = false;
            this.searchBiaoqing();
          }
          if (this.currentTab == 2 && this.inputValue != this.oldbaike) {
            this.baikeList = [];
            this.scroll2 = "";
            this.isend2 = false;
            this.searchBaike();
          }
        } else {
          wx.switchTab({
            url: "./liaomeitaolulist"
          })
        }
      } else if (
        this.endX - this.startX < -30 &&
        Math.abs(this.endY - this.startY) * 1.5 <
        Math.abs(this.endX - this.startX)
      ) {
        if (this.currentTab < 2) {
          this.currentTab++;
          if (this.currentTab == 0 && this.inputValue != this.oldhuashu) {
            this.huashuList = [];
            this.scroll0 = "";
            this.isend0 = false;
            this.searchLiaomeihuashu();
          }
          if (this.currentTab == 1 && this.inputValue != this.oldbiaoqing) {
            this.biaoqingList = [];
            this.scroll1 = "";
            this.isend1 = false;
            this.searchBiaoqing();
          }
          if (this.currentTab == 2 && this.inputValue != this.oldbaike) {
            this.baikeList = [];
            this.scroll2 = "";
            this.isend2 = false;
            this.searchBaike();
          }
        } else {
          wx.switchTab({
            url: "./info"
          })
        }
      }
      this.$apply();
    }
    async setJilu() {
      let unionid = wepy.getStorageSync('unionid') || '';
      if (unionid == '') {
        wepy.navigateTo({
          url: "/pages/shouquan"
        });
        return false;
      }
      const json = await api.setJilu({
        unionid: unionid,
        query: this.inputValue,
        jilutype: this.jilutype,
        jilucontent: this.jilucontent
      });
      this.$apply();
    }
    methods = {
      jilu(jilutype, jilucontent) {
        this.jilutype = jilutype;
        this.jilucontent = jilucontent;
        this.$apply();
        this.setJilu();
      },
      nochange() {
        this.ifonShow = false;
        this.$apply();
      },
      touchStart(e) {
        this.startX = e.changedTouches[0].clientX;
        this.startY = e.changedTouches[0].clientY;
      },
      touchEnd(e) {
        this.endX = e.changedTouches[0].clientX;
        this.endY = e.changedTouches[0].clientY;
        this.changeTab();
      },
      bindinput(obj) {
        this.inputValue = obj.detail.value;
        this.showRecommend = true;
        if (this.inputValue == '') {
          this.showhlepkeyword = false;
        } else {
          this.getHelpkeywords();
        }
      },
      bindconfirm(newword) {
        this.showRecommend = false;
        this.showhlepkeyword = false;
        if (newword != '') {
          this.inputValue = newword;
        }
        this.inputValue = this.inputValue
          .replace(/^\s\s*/, "")
          .replace(/\s\s*$/, "");
        if (this.inputValue == '') {
          return;
        }
        if (this.currentTab == 0 && this.inputValue != this.oldhuashu) {
          this.huashuList = [];
          this.scroll0 = "";
          this.isend0 = false;
          this.searchLiaomeihuashu();
        }
        if (this.currentTab == 1 && this.inputValue != this.oldbiaoqing) {
          this.biaoqingList = [];
          this.scroll1 = "";
          this.isend1 = false;
          this.searchBiaoqing();
        }
        if (this.currentTab == 2 && this.inputValue != this.oldbaike) {
          this.baikeList = [];
          this.scroll2 = "";
          this.isend2 = false;
          this.searchBaike();
        }
      },
      bindfocus() {
        this.showRecommend = true;
        this.getHiswordList();
      },
      delText() {
        this.inputValue = "";
        this.showhlepkeyword = false;
      },
      getCurrentTab(cur, evt) {
        this.currentTab = cur;
        if (this.currentTab == 0 && this.inputValue != this.oldhuashu) {
          this.huashuList = [];
          this.scroll0 = "";
          this.isend0 = false;
          this.searchLiaomeihuashu();
        }
        if (this.currentTab == 1 && this.inputValue != this.oldbiaoqing) {
          this.biaoqingList = [];
          this.scroll1 = "";
          this.isend1 = false;
          this.searchBiaoqing();
        }
        if (this.currentTab == 2 && this.inputValue != this.oldbaike) {
          this.baikeList = [];
          this.scroll2 = "";
          this.isend2 = false;
          this.searchBaike();
        }
      },
      searchKeyword(val) {
        this.currentTab = 0;
        this.huashuList = [];
        this.scroll0 = "";
        this.isend0 = false;
        this.doSearch(val);
      },
      clearHis() {
        this.clearHiswords();
      }
    }
    onPullDownRefresh() {
      wx.stopPullDownRefresh();
      this.showRecommend = 1 - this.showRecommend;
      if (this.showRecommend == 0) {
        this.inputValue = this.inputValue
          .replace(/^\s\s*/, "")
          .replace(/\s\s*$/, "");
        if (this.currentTab == 0 && this.inputValue != this.oldhuashu) {
          this.huashuList = [];
          this.scroll0 = "";
          this.isend0 = false;
          this.searchLiaomeihuashu();
        }
        if (this.currentTab == 1 && this.inputValue != this.oldbiaoqing) {
          this.biaoqingList = [];
          this.scroll1 = "";
          this.isend1 = false;
          this.searchBiaoqing();
        }
        if (this.currentTab == 2 && this.inputValue != this.oldbaike) {
          this.baikeList = [];
          this.scroll2 = "";
          this.isend2 = false;
          this.searchBaike();
        }
      }
      if (this.showRecommend) this.getHiswordList();
      this.$apply();
    }
    onReachBottom() {
      if (this.currentTab == 0) {
        if (!this.isend0) this.searchLiaomeihuashu();
      }
      if (this.currentTab == 1) {
        if (!this.isend1) this.searchBiaoqing();
      }
      if (this.currentTab == 2) {
        if (!this.isend2) this.searchBaike();
      }
    }
    onShow() {
      let that = this;
      if (wepy.$instance.globalData.currentTab != -1) {
        this.currentTab = wepy.$instance.globalData.currentTab;
        wepy.$instance.globalData.currentTab = -1;
      }
      that.showRecommend = 0;
      if (that.ifonShow == false) {
        that.ifonShow = true;
        that.$apply();
        return false;
      }
      wx.getClipboardData({
        success: function(res) {
          var copyvalue = res.data.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
          if (that.copyinput != copyvalue) {
            that.copyinput = copyvalue;
            that.inputValue = copyvalue;
          }
          if (
            (that.currentTab == 0 && that.oldhuashu == that.inputValue) ||
            (that.currentTab == 1 && that.oldbiaoqing == that.inputValue) ||
            (that.currentTab == 2 && that.oldbaike == that.inputValue)
          )
            return false;
          that.huashuList = [];
          that.biaoqingList = [];
          that.baikeList = [];
          that.isend0 = false;
          that.isend1 = false;
          that.isend2 = false;
          that.scroll0 = "";
          that.scroll1 = "";
          that.scroll2 = "";
          that.doSearch(that.inputValue);
        }
      });
      that.$apply();
    }
    onLoad() {
      this.getRecommend();
      this.$apply();
    }
    onShareAppMessage() {
      return {
        title: "恋爱联盟",
        path: "/pages/home"
      };
    }
  }
</script>

<style lang="less">
  .searchpage {
    background: #ffffff;
  }
  .search {
    width: 100%;
    top: 0rpx;
    position: fixed;
    z-index: 99;
    background: #ffffff;
    border-bottom: 2rpx solid rgba(0, 0, 0, 0.1);
    .searchkuang {
      display: flex;
      width: 100%;
      padding-left: 2%;
      .serch_content {
        width: 84%;
        display: flex;
        align-items: center;
        border-radius: 300rpx;
        color: #333;
        background: rgba(0, 0, 0, 0.1);
        height: 68rpx;
        .search_input {
          line-height: 68rpx;
          font-size: 28rpx;
          width: 100%;
        }
        .searchicon {
          padding-left: 15rpx;
          padding-top: 10rpx;
        }
        .clearicon {
          padding-left: 10rpx;
          padding-right: 10rpx;
          padding-top: 10rpx;
        }
      }
      .searchanniu {
        margin-left: 2%;
        text-align: center;
        border-radius: 20rpx;
        line-height: 68rpx;
        width: 10%;
        color: #fff;
        background: #ff4500;
      }
    }
    .tab {
      height: 80rpx;
      line-height: 80rpx;
    }
  }
  .showdata {
    padding-top: 150rpx;
    background: rgba(0, 0, 0, 0.1);
    .textend {
      padding-top: 30rpx;
      padding-bottom: 30rpx;
      text-align: center;
    }
  }
  .recommend {
    padding-top: 88rpx;
    .helpkeywords {
      .keyword {
        padding-top: 20rpx;
        padding-bottom: 20rpx;
        color: #333;
        width: 100%;
        text-align: center;
      }
    }
    .rementuijian {
      border-radius: 20rpx;
      margin-left: 20rpx;
      margin-right: 20rpx;
      margin-bottom: 20rpx;
      padding-top: 20rpx;
      background: rgba(0, 0, 0, 0.1);
      .kuai {
        background: rgba(0, 0, 0, 0);
        width: 100%;
        border-radius: 20rpx;
        display: inline-block;
        .biaoti {
          font-weight: bolder;
          padding-left: 20rpx;
          text-align: left;
          color: #999999;
          font-size: 30rpx;
        }
        .weui-btn {
          margin-left: 2%;
          margin-top: 6rpx;
          margin-bottom: 0rpx;
          padding: 0rpx;
          text-align: center;
          width: 22.5%;
          height: 62rpx;
          background: #ffffff;
          font-size: 28rpx;
        }
      }
    }
    .lishijilu {
      border-radius: 20rpx;
      margin-left: 20rpx;
      margin-right: 20rpx;
      margin-bottom: 20rpx;
      padding-top: 20rpx;
      background: rgba(0, 0, 0, 0.1);
      .kuai {
        background: rgba(0, 0, 0, 0);
        width: 100%;
        border-radius: 20rpx;
        display: inline-block;
        .biaoti {
          font-weight: bolder;
          padding-left: 20rpx;
          text-align: left;
          color: #999999;
          font-size: 30rpx;
        }
        .weui-btn {
          margin-left: 2%;
          margin-top: 6rpx;
          margin-bottom: 0rpx;
          padding: 0rpx;
          text-align: center;
          width: 30.5%;
          height: 62rpx;
          background: #ffffff;
          font-size: 28rpx;
        }
      }
    }
    .if_his {
      flex-wrap: nowrap;
      margin-left: 20rpx;
      text-align: left;
      font-size: 28rpx;
      color: #999999;
    }
    .btn_box {
      width: 228rpx;
      align-items: center;
      margin-top: 20rpx;
      margin-bottom: 20rpx;
      font-size: 28rpx;
      color: #999999;
    }
    .minkuai {
      height: 1rpx;
    }
  }
</style>
